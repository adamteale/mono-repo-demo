import React, { useState } from "react";
import { View, Text, Pressable } from "react-native";
import { AtIcon } from "../at-icon"; // Assuming AtIcon is compatible or adaptable for React Native
import { checkboxVariants } from "./at-checkbox.variants"; // You might need to adapt this for NativeWind/Tailwind styling.
import { AtCheckboxProps } from "./at-checkbox.types";

export const AtCheckbox = ({
  label,
  checked = false,
  disabled = false,
  onClick,
  className = "",
  dataTestId = "at-checkbox",
  required = false,
}: AtCheckboxProps) => {
  const [isFocused, setIsFocused] = useState(false);

  const handleInteraction = () => {
    if (!disabled) {
      onClick(!checked);
    }
  };

  const baseStyles = `
    flex flex-row items-center min-h-[44px] max-w-fit rounded-lg cursor-pointer gap-2
  `;

  const focusStyles = isFocused
    ? "outline outline-cta-primary outline-1 outline-offset-4"
    : "";

  const disabledStyles = disabled ? "opacity-50" : "";

  return (
    <Pressable
      accessibilityRole="checkbox"
      accessibilityState={{ checked, disabled }}
      disabled={disabled}
      onPress={handleInteraction}
      onFocus={() => setIsFocused(true)}
      onBlur={() => setIsFocused(false)}
      className={`${className} ${baseStyles} ${focusStyles} ${disabledStyles}`}
      testID={dataTestId}
    >
      <AtIcon
        size={21.595}
        type={checked && !disabled ? "square-checked" : "square"}
        color={!disabled ? "primary" : "disabled-primary"}
      />
      <Text
        className={`text-left leading-4 ${checkboxVariants({ disabled })}`}
        accessibilityElementsHidden={true}
        importantForAccessibility="no"
      >
        {label}
      </Text>
    </Pressable>
  );
};
